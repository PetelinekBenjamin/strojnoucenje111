name: Predictive Model Pipeline

on:
  workflow_run:
    workflows: ["Predictive Model Pipeline"]
    types:
      - completed

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
  
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
    
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt dvc
          pip install matplotlib scikit-learn mlflow tensorflow tf2onnx 

      
      - name: Build Docker image from Dockerfile
        run: docker build -f Dockerfile -t api .

      - name: Build Docker image from Dockerfile1
        run: docker build -f Dockerfile1 -t vmesnik .

      - name: Set context to Okteto Cloud
        uses: okteto/context@latest
        with:
          token: ${{ secrets.OKTETO_TOKEN }}

      - name: Deploy your preview environment
        uses: okteto/deploy-preview@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: staging-${{ github.event.number }}-OKTETO_USERNAME
          scope: personal
          timeout: 15m

      - uses: nev7n/wait_for_response@v1
        with:
          url: https://api-staging-${{ github.event.number }}-okteto_username.cloud.okteto.net
          responseCode: 200
          timeout: 4000

      - name: Run API tests against Staging Namespace
        run: pytest
        env:
          STAGING_COUCHDB_URL: https://api-staging-${{ github.event.number }}-okteto_username.cloud.okteto.net

      - name: Build and deploy application container to Okteto Flask Namespace
        if: ${{ github.event_name == 'push' }}
        uses: okteto/deploy-stack@master
        with:
          name: okteto-flask-app
          build: true
